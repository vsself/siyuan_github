{
	"ID": "20230327155117-ud180o9",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230327155117-ud180o9",
		"title": "Java ThreadLocal",
		"updated": "20230327155126"
	},
	"Children": [
		{
			"ID": "20230327155126-01pnbo1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-01pnbo1",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Java中的ThreadLocal类可以让你创建的变量只被同一个线程进行读和写操作。因此，尽管有两个线程同时执行一段相同的代码，而且这段代码又有一个指向同一个ThreadLocal变量的引用，但是这两个线程依然不能看到彼此的ThreadLocal变量域。"
				}
			]
		},
		{
			"ID": "20230327155126-k33lhuc",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-k33lhuc",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://ifeve.com/java-theadlocal/#create",
					"TextMarkTextContent": "创建一个ThreadLocal对象"
				}
			]
		},
		{
			"ID": "20230327155126-o2r5god",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-o2r5god",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://ifeve.com/java-theadlocal/#access",
					"TextMarkTextContent": "访问ThreadLocal对象"
				}
			]
		},
		{
			"ID": "20230327155126-x5dc576",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-x5dc576",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://ifeve.com/java-theadlocal/#generic",
					"TextMarkTextContent": "ThreadLocal泛型"
				}
			]
		},
		{
			"ID": "20230327155126-bir5cn3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-bir5cn3",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://ifeve.com/java-theadlocal/#initialize",
					"TextMarkTextContent": "初始化ThreadLocal"
				}
			]
		},
		{
			"ID": "20230327155126-jl38urw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-jl38urw",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://ifeve.com/java-theadlocal/#example",
					"TextMarkTextContent": "Full ThreadLocal Example"
				}
			]
		},
		{
			"ID": "20230327155126-5entid3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-5entid3",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6、"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "http://ifeve.com/java-theadlocal/#inheritableThreadLocal",
					"TextMarkTextContent": "InheritableThreadLocal"
				}
			]
		},
		{
			"ID": "20230327155126-an11fh1",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230327155126-an11fh1",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、创建一个ThreadLocal对象"
				}
			]
		},
		{
			"ID": "20230327155126-xjxg9z9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-xjxg9z9",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如下所示，创建一个ThreadLocal变量："
				}
			]
		},
		{
			"ID": "20230327155126-bsfhti9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-bsfhti9",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[code lang=”java”]\nprivate ThreadLocal myThreadLocal = new ThreadLocal();\n[/code]"
				}
			]
		},
		{
			"ID": "20230327155126-1692avq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-1692avq",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "你实例化了一个ThreadLocal对象。每个线程仅需要实例化一次即可。虽然不同的线程执行同一段代码时，访问同一个ThreadLocal变量，但是每个线程只能看到私有的ThreadLocal实例。所以不同的线程在给ThreadLocal对象设置不同的值时，他们也不能看到彼此的修改。"
				}
			]
		},
		{
			"ID": "20230327155126-vrxemxm",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230327155126-vrxemxm",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、访问ThreadLocal对象"
				}
			]
		},
		{
			"ID": "20230327155126-2748tyy",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-2748tyy",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一旦创建了一个ThreadLocal对象，你就可以通过以下方式来存储此对象的值："
				}
			]
		},
		{
			"ID": "20230327155126-2r79dcd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-2r79dcd",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[code lang=”java”]\nmyThreadLocal.set(\"A thread local value\");\n[/code]"
				}
			]
		},
		{
			"ID": "20230327155126-g44gcu1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-g44gcu1",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "也可以直接读取一个ThreadLocal对象的值："
				}
			]
		},
		{
			"ID": "20230327155126-we61lrw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-we61lrw",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[code lang=”java”]\nString threadLocalValue = (String) myThreadLocal.get();\n[/code]"
				}
			]
		},
		{
			"ID": "20230327155126-fbdc7bt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-fbdc7bt",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "get()方法会返回一个Object对象，而set()方法则依赖一个Object对象参数。"
				}
			]
		},
		{
			"ID": "20230327155126-5a5a7zu",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230327155126-5a5a7zu",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3、ThreadLocal泛型"
				}
			]
		},
		{
			"ID": "20230327155126-hf6aio8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-hf6aio8",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了使get()方法返回值不用做强制类型转换，通常可以创建一个泛型化的ThreadLocal对象。以下就是一个泛型化的ThreadLocal示例："
				}
			]
		},
		{
			"ID": "20230327155126-ma1jogd",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-ma1jogd",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[code lang=”java”]\nprivate ThreadLocal myThreadLocal1 = new ThreadLocal\u003cString\u003e();\n[/code]"
				}
			]
		},
		{
			"ID": "20230327155126-76f9uoz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-76f9uoz",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "现在你可以存储一个字符串到ThreadLocal实例里，此外，当你从此ThreadLocal实例中获取值的时候，就不必要做强制类型转换。"
				}
			]
		},
		{
			"ID": "20230327155126-2u3fouu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-2u3fouu",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[code lang=”java”]\nmyThreadLocal1.set(\"Hello ThreadLocal\");\nString threadLocalValues = myThreadLocal.get();\n[/code]"
				}
			]
		},
		{
			"ID": "20230327155126-wxagjfq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230327155126-wxagjfq",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4、初始化ThreadLocal"
				}
			]
		},
		{
			"ID": "20230327155126-6u5cj8t",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-6u5cj8t",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "由于ThreadLocal对象的set()方法设置的值只对当前线程可见，那有什么方法可以为ThreadLocal对象设置的值对所有线程都可见。"
				}
			]
		},
		{
			"ID": "20230327155126-it0nc94",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-it0nc94",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为此，我们可以通过ThreadLocal子类的实现，并覆写initialValue()方法，就可以为ThreadLocal对象指定一个初始化值。如下所示:"
				}
			]
		},
		{
			"ID": "20230327155126-bwavwu0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-bwavwu0",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[code lang=”java”]\nprivate ThreadLocal myThreadLocal = new ThreadLocal\u003cString\u003e() {\n@Override protected String initialValue() {\nreturn \"This is the initial value\";\n}\n};\n[/code]"
				}
			]
		},
		{
			"ID": "20230327155126-uugxry0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-uugxry0",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "此时，在set()方法调用前，当调用get()方法的时候，所有线程都可以看到同一个初始化值。"
				}
			]
		},
		{
			"ID": "20230327155126-sz997wz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230327155126-sz997wz",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5、Full ThreadLocal Example"
				}
			]
		},
		{
			"ID": "20230327155126-rbo5w0b",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-rbo5w0b",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "以下是一个完整的ThreadLocal示例："
				}
			]
		},
		{
			"ID": "20230327155126-9qysome",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-9qysome",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[code lang=”java”]\npublic class ThreadLocalExample {"
				}
			]
		},
		{
			"ID": "20230327155126-nxrfp9e",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-nxrfp9e",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "public static class MyRunnable implements Runnable {"
				}
			]
		},
		{
			"ID": "20230327155126-outglji",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-outglji",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "private ThreadLocal\u003cInteger\u003e threadLocal =\nnew ThreadLocal\u003cInteger\u003e();"
				}
			]
		},
		{
			"ID": "20230327155126-s0cslza",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-s0cslza",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "@Override\npublic void run() {\nthreadLocal.set( (int) (Math.random() * 100D) );"
				}
			]
		},
		{
			"ID": "20230327155126-55qi1sw",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-55qi1sw",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "try {\nThread.sleep(2000);\n} catch (InterruptedException e) {\n}"
				}
			]
		},
		{
			"ID": "20230327155126-k8tbbyb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-k8tbbyb",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "System.out.println(threadLocal.get());\n}\n}"
				}
			]
		},
		{
			"ID": "20230327155126-ijlqdvv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-ijlqdvv",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "public static void main(String[] args) {\nMyRunnable sharedRunnableInstance = new MyRunnable();"
				}
			]
		},
		{
			"ID": "20230327155126-56b6hw9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-56b6hw9",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Thread thread1 = new Thread(sharedRunnableInstance);\nThread thread2 = new Thread(sharedRunnableInstance);"
				}
			]
		},
		{
			"ID": "20230327155126-eak00st",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-eak00st",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "thread1.start();\nthread2.start();"
				}
			]
		},
		{
			"ID": "20230327155126-m4gucto",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-m4gucto",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "thread1.join(); //wait for thread 1 to terminate\nthread2.join(); //wait for thread 2 to terminate\n}"
				}
			]
		},
		{
			"ID": "20230327155126-yn853er",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-yn853er",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "}\n[/code]"
				}
			]
		},
		{
			"ID": "20230327155126-44w73t7",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-44w73t7",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "上面创建了两个线程共享一个MyRunnable实例。每个线程执行run()方法的时候，会给同一个ThreadLocal实例设置不同的值。如果调用set()方法的时候用synchronized关键字同步，而且不是一个ThreadLocal对象实例，那么第二个线程将会覆盖第一个线程所设置的值。"
				}
			]
		},
		{
			"ID": "20230327155126-yve0qs4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-yve0qs4",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "然而，由于是ThreadLocal对象，所以两个线程无法看到彼此的值。因此，可以设置或者获取不同的值。"
				}
			]
		},
		{
			"ID": "20230327155126-zugohou",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230327155126-zugohou",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6、InheritableThreadLocal"
				}
			]
		},
		{
			"ID": "20230327155126-2rj66fo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230327155126-2rj66fo",
				"updated": "20230327155126"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "InheritableThreadLocal类是ThreadLocal的子类。为了解决ThreadLocal实例内部每个线程都只能看到自己的私有值，所以InheritableThreadLocal允许一个线程创建的所有子线程访问其父线程的值。"
				}
			]
		}
	]
}