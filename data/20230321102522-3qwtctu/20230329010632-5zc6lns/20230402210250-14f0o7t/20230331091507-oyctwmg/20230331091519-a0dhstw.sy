{
	"ID": "20230331091519-a0dhstw",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20230331091519-a0dhstw",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20230331091519-mqq3246\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20230331091519-nuhly3x\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20230331091519-mqq3246\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "Spring 源码分析总结篇一: Spring IOC篇_猫吻鱼的博客-CSDN博客",
		"updated": "20230406115001"
	},
	"Children": [
		{
			"ID": "20230331091519-mqq3246",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230331091519-mqq3246",
				"updated": "20230331091519"
			}
		},
		{
			"ID": "20230331091519-nvnsit8",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230331091519-nvnsit8",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-8vj9n03",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-8vj9n03",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-qkb3qp5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-qkb3qp5",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/107122196",
									"TextMarkTextContent": "https://blog.csdn.net/qq_36882793/article/details/107122196"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-h5lmxoa",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-h5lmxoa",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-dvsp0y2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-dvsp0y2",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一、前言本文，全文仅代表个人理解和意见，故难免出现错误，如若发现，欢迎指正。十分谢谢。二、Spring IOC QA2.1 Spring IOC 实现个人感觉最重要的两个类ConfigurationClassPostProcessor ： 完成了类的扫描和配置了的解析AutowiredAnnotationBeanPostProcessor ： 完成了非 Property 的属性的注入ConfigurationClassPostProcessor 是 BeanFactoryPost"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-7t87f0o",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-7t87f0o",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-8uu5kdp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-8uu5kdp",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2023-03-31 09:15:19"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230331091519-c4tesoi",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230331091519-c4tesoi",
				"updated": "20230331091519"
			}
		},
		{
			"ID": "20230331091519-9ki9dk3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20230331091519-9ki9dk3",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "文章目录"
				}
			]
		},
		{
			"ID": "20230331091519-73q4prl",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230331091519-73q4prl",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-vm12n9k",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-vm12n9k",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-qtth5i0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-qtth5i0",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/107122196#_1",
									"TextMarkTextContent": "一、前言"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-1wpin6w",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-1wpin6w",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-01hexdt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-01hexdt",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/107122196#_10",
									"TextMarkTextContent": "二、正文"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-kowwn9l",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-kowwn9l",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-cwoehn2",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230331091519-cwoehn2",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"ID": "20230331091519-umjq3y9",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-umjq3y9",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-e13x252",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-e13x252",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/107122196#1_Spring_IOC__12",
													"TextMarkTextContent": "1. Spring IOC 实现个人感觉最重要的两个类"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-nxdatfj",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-nxdatfj",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-kogmb91",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-kogmb91",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/107122196#2_Spring_24",
													"TextMarkTextContent": "2. Spring什么时候扫描的包路径?"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-121xpru",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-121xpru",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-j9820g5",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-j9820g5",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/107122196#3_ConfigurationClassPostProcessor___31",
													"TextMarkTextContent": "3. ConfigurationClassPostProcessor 的解析流程"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-3q3jgln",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-3q3jgln",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-ipth5wd",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-ipth5wd",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/107122196#4_AutowiredAnnotationBeanPostProcessor___63",
													"TextMarkTextContent": "4. AutowiredAnnotationBeanPostProcessor 的解析流程"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-6ost420",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-6ost420",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-mqkusc4",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-mqkusc4",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"TextMarkType": "a",
													"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/107122196#5_Bean__79",
													"TextMarkTextContent": "5. Bean 创建的过程"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230331091519-r7mybtr",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230331091519-r7mybtr",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一、前言"
				}
			]
		},
		{
			"ID": "20230331091519-i1v9f5i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-i1v9f5i",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文，是本人在阅读"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://so.csdn.net/so/search?q=%E6%BA%90%E7%A0%81\u0026spm=1001.2101.3001.7020",
					"TextMarkTextContent": "源码"
				},
				{
					"Type": "NodeText",
					"Data": "过程中的一些内容整理和总结。\n全文仅代表个人理解和意见，故难免出现错误，如若发现，欢迎指正。十分谢谢。"
				}
			]
		},
		{
			"ID": "20230331091519-vqmgvzf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-vqmgvzf",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "本文所涉及的文章内容均在 ： "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/106440723",
					"TextMarkTextContent": "Spring源码分析：全集整理"
				}
			]
		},
		{
			"ID": "20230331091519-66qv8ee",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230331091519-66qv8ee",
				"updated": "20230331091519"
			}
		},
		{
			"ID": "20230331091519-k609svo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-k609svo",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "关于 ："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ConfigurationClassPostProcessor"
				},
				{
					"Type": "NodeText",
					"Data": "​ 和 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AutowiredAnnotationBeanPostProcessor"
				},
				{
					"Type": "NodeText",
					"Data": "​ 的详细分析，可以在 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/106440723",
					"TextMarkTextContent": "Spring源码分析：全集整理"
				},
				{
					"Type": "NodeText",
					"Data": " 中找到对应的分析文章。"
				}
			]
		},
		{
			"ID": "20230331091519-go96n5r",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230331091519-go96n5r",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "二、正文"
				}
			]
		},
		{
			"ID": "20230331091519-wlmld50",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230331091519-wlmld50",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1. Spring "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://so.csdn.net/so/search?q=IOC\u0026spm=1001.2101.3001.7020",
					"TextMarkTextContent": "IOC"
				},
				{
					"Type": "NodeText",
					"Data": " 实现个人感觉最重要的两个类"
				}
			]
		},
		{
			"ID": "20230331091519-th8y0dj",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230331091519-th8y0dj",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-7yyytct",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-7yyytct",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-cf4qt9u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-cf4qt9u",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ConfigurationClassPostProcessor"
								},
								{
									"Type": "NodeText",
									"Data": "​ ： 完成了类的扫描和配置了的解析"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-8exc84v",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-8exc84v",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-jrfga86",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-jrfga86",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AutowiredAnnotationBeanPostProcessor"
								},
								{
									"Type": "NodeText",
									"Data": "​ ： 完成了非 Property 的属性的注入"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230331091519-7x1aw00",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230331091519-7x1aw00",
				"updated": "20230331091519"
			}
		},
		{
			"ID": "20230331091519-4wrrfm8",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230331091519-4wrrfm8",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-crdisl0",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230331091519-crdisl0",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-5ufroq7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-5ufroq7",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "ConfigurationClassPostProcessor"
								},
								{
									"Type": "NodeText",
									"Data": "​ 是 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BeanFactoryPostProcessor"
								},
								{
									"Type": "NodeText",
									"Data": "​子类。完成了对Bean的解析，生成的对应的BeanDefinition。\n​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "postProcessBeanDefinitionRegistry"
								},
								{
									"Type": "NodeText",
									"Data": "​ : 解析所有需要注册的配置类\n​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "postProcessBeanFactory"
								},
								{
									"Type": "NodeText",
									"Data": "​ ：对Full类型进行代理增强,保证@Bean方法正确语意。"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-kok8tu5",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230331091519-kok8tu5",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-axdkk9t",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-axdkk9t",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AutowiredAnnotationBeanPostProcessor"
								},
								{
									"Type": "NodeText",
									"Data": "​ 是 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "BeanPostProcessor"
								},
								{
									"Type": "NodeText",
									"Data": "​ 子类，完成了"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "@Autowired、@Value、@Inject"
								},
								{
									"Type": "NodeText",
									"Data": "​注解的解析注入功能。也就是说 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "AutowiredAnnotationBeanPostProcessor"
								},
								{
									"Type": "NodeText",
									"Data": "​ 中才完成了属性的注入。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230331091519-5ea36fq",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230331091519-5ea36fq",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2. Spring什么时候扫描的包路径?"
				}
			]
		},
		{
			"ID": "20230331091519-pmsg6cu",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-pmsg6cu",
				"updated": "20230406115001"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Spring在启动时候会将启动类注册到Spring容器中。在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ConfigurationClassPostProcessor"
				},
				{
					"Type": "NodeText",
					"Data": "​中,会将启动类作为配置类进行解析。由于启动类上面有"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "@ComponentScan"
				},
				{
					"Type": "NodeText",
					"Data": "​注解,所以在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "ConfigurationClassParser# doProcessConfigurationClass中"
				},
				{
					"Type": "NodeText",
					"Data": "​会解析这个注解, 根据解析后的路径通过\n​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "this.componentScanParser.parse (componentScan,sourceClass.getMetadata () .getClassName())"
				},
				{
					"Type": "NodeText",
					"Data": "​进行扫描，注册扫描到的需要注入的类(被"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "@Component"
				},
				{
					"Type": "NodeText",
					"Data": "​ 修饰的类)并进行注入，如果有配置类再进行递归的配置类解析。(扫描是在 方法 "
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "org.springframework.context. annotation.ClassPathBeanDefinitionScanner#doScan"
				},
				{
					"Type": "NodeText",
					"Data": "​中进行的扫描，"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "sub",
					"TextMarkTextContent": "但是我偷懒了没看具体实现)"
				}
			]
		},
		{
			"ID": "20230331091519-gdnwiyv",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230331091519-gdnwiyv",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "3. ConfigurationClassPostProcessor 的解析流程"
				}
			]
		},
		{
			"ID": "20230331091519-75skiel",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-75skiel",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "."
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "ConfigurationClassPostProcessor"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "完成了对各种配置类的扫描,并将其引入的bean注册到BeanFactory中。"
				}
			]
		},
		{
			"ID": "20230331091519-3kl9adn",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230331091519-3kl9adn",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-qqwkzde",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230331091519-qqwkzde",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-ayviev2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-ayviev2",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "postProcessBeanDefinitionRegistry"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "方法逻辑(完成了各种配置类的解析和注册)"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-mosp2zf",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230331091519-mosp2zf",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-m177l4g",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-m177l4g",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "获取所有"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "BeanFactory"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "中的"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "BeanDefinition"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "。"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-swrrleq",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "My4=",
						"Num": 3
					},
					"Properties": {
						"id": "20230331091519-swrrleq",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-3uzlzof",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-3uzlzof",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "遍历所有"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "BeanDefinition"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": ",筛选出full或者lite 配置类,等待下一步处理。"
								}
							]
						},
						{
							"ID": "20230331091519-wkl7y7m",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230331091519-wkl7y7m",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"ID": "20230331091519-z7ujdcq",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-z7ujdcq",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-hj52zw6",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-hj52zw6",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong code",
													"TextMarkTextContent": "Full"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": " 规则"
												},
												{
													"Type": "NodeText",
													"Data": " ：被 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Configuration"
												},
												{
													"Type": "NodeText",
													"Data": "​ 注解修饰 \u0026\u0026 "
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "proxyBeanMethods"
												},
												{
													"Type": "NodeText",
													"Data": "​属性为true (默认为true)"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-ibgyfne",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-ibgyfne",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-fko8lj2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-fko8lj2",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong code",
													"TextMarkTextContent": "Lite"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "规则"
												},
												{
													"Type": "NodeText",
													"Data": "​：被"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Component. @ComponentScan, @Import. @ImportResource"
												},
												{
													"Type": "NodeText",
													"Data": "​修饰的类或者类中有被@Bean修饰的方法（该方法会被包装成一个 BeanDefinition）"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-t6pcdcr",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NC4=",
						"Num": 4
					},
					"Properties": {
						"id": "20230331091519-t6pcdcr",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-a4oyso7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-a4oyso7",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "遍历所有full 和lite配置类,解析各种注解,对配置类进行进一步的解析(因为Lite的配置类需要二次解析,所以这里主要是二次解析)"
								}
							]
						},
						{
							"ID": "20230331091519-2u6ftme",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230331091519-2u6ftme",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"ID": "20230331091519-7y1oote",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-7y1oote",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-jmyzkb9",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-jmyzkb9",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Component"
												},
												{
													"Type": "NodeText",
													"Data": "​进行解析：即如果当前配置类被@Component注解修饰,则去解析其内部类(包括静态内部类和非静态内部类)是否是配置类,如果是，递归解析发现的配置类。"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-iszqago",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-iszqago",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-qhel69v",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-qhel69v",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": ":对"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@PropertySource"
												},
												{
													"Type": "NodeText",
													"Data": "​进行解析：解析出其指定的配置文件内容,并保存到environment 中"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-y2najpe",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-y2najpe",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-zhryte7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-zhryte7",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": ":对"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@ComponentScan"
												},
												{
													"Type": "NodeText",
													"Data": "​注解的解析：获取注解指定路径,进行扫描注册。对新扫描出来的BeanDefinition进行判定是否是配置类,如果是,则递归去解析配置类"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-lewyxis",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-lewyxis",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-rkqazjt",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-rkqazjt",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Import、ImportSelector、ImportBeanDefinitionRegistrar"
												},
												{
													"Type": "NodeText",
													"Data": "​的解析：因为这三个注解或接口,本质上完成的功能是.一样的,都是引入类。所以在这一部分的处理上只是区分了不同的类型"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-2ax845l",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-2ax845l",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-igoepsh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-igoepsh",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@ImportResource"
												},
												{
													"Type": "NodeText",
													"Data": "​注解的解析：提取出"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@ImportResource"
												},
												{
													"Type": "NodeText",
													"Data": "​注解的属性,保存到"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "configClass"
												},
												{
													"Type": "NodeText",
													"Data": "​ 的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "importedResources"
												},
												{
													"Type": "NodeText",
													"Data": "​属性中"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-dpktt4v",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-dpktt4v",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-tr4paa8",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-tr4paa8",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对被"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Bean修饰的方法"
												},
												{
													"Type": "NodeText",
													"Data": "​的解析：提取出@Bean修饰的方法,保存的到"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "configClass"
												},
												{
													"Type": "NodeText",
													"Data": "​的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "beanMethods"
												},
												{
													"Type": "NodeText",
													"Data": "​属性中."
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-t8mwmp8",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-t8mwmp8",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-vfj7o8u",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-vfj7o8u",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对接口的默认方法解析：保存的到"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "configClass"
												},
												{
													"Type": "NodeText",
													"Data": "​的"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "beanMethods"
												},
												{
													"Type": "NodeText",
													"Data": "​属性中"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-1d0zz53",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-1d0zz53",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-maxdcxp",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-maxdcxp",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "对父类的解析：如果存在父类,则递归其父类进行解析。"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-58f45kx",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "NS4=",
						"Num": 5
					},
					"Properties": {
						"id": "20230331091519-58f45kx",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-fc9jykw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-fc9jykw",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "遍历所有的配置类,进行注册"
								}
							]
						},
						{
							"ID": "20230331091519-5bm2cdu",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230331091519-5bm2cdu",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"ID": "20230331091519-9y8y2tz",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-9y8y2tz",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-6dtkoay",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-6dtkoay",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "处理引入的配置类：将配置类信息封装成"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BeanDefinition"
												},
												{
													"Type": "NodeText",
													"Data": "​,并注册到"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BeanFactory"
												},
												{
													"Type": "NodeText",
													"Data": "​"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-hl5t805",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-hl5t805",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-98zptf2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-98zptf2",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "处理"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Bean修饰的方法"
												},
												{
													"Type": "NodeText",
													"Data": "​：​"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "strong",
													"TextMarkTextContent": "将@Bean修饰的方法封装成BeanDefinition"
												},
												{
													"Type": "NodeText",
													"Data": "​，并注册到"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BeanFactory"
												},
												{
													"Type": "NodeText",
													"Data": "​中"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-eztc843",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-eztc843",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-vgla2jm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-vgla2jm",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "处理"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@ImportResource"
												},
												{
													"Type": "NodeText",
													"Data": "​注解引入的资源文件,获取到BeanDefinition并注册。"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-v0d6wsp",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-v0d6wsp",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-s0vabaw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-s0vabaw",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "处理"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Import、ImportSelector、ImportBeanDefinitionRegistrar"
												},
												{
													"Type": "NodeText",
													"Data": "​引入的类,注册到"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "BeanFactory"
												},
												{
													"Type": "NodeText",
													"Data": "​中。"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230331091519-wzqjc7x",
			"Type": "NodeThematicBreak",
			"Properties": {
				"id": "20230331091519-wzqjc7x",
				"updated": "20230331091519"
			}
		},
		{
			"ID": "20230331091519-savptcj",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-savptcj",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "补充：4.1 中为什么要解析"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong code",
					"TextMarkTextContent": "@Component"
				},
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "?"
				}
			]
		},
		{
			"ID": "20230331091519-cletd46",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230331091519-cletd46",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-evutrt9",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-evutrt9",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-lkatiaj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-lkatiaj",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因为过滤出来的配置类可能没有被"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "@Component"
								},
								{
									"Type": "NodeText",
									"Data": "​修饰,比如仅仅是,可能是Spring硬编码注入或者我们通过编码注入的bean。如果没有使用"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "@Component"
								},
								{
									"Type": "NodeText",
									"Data": "​注解修饰,就没必要解析其内部类是否是配置类。比如最简单的就是"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "spring.factories"
								},
								{
									"Type": "NodeText",
									"Data": "​文件中引入的类。可能满足配置类判定，但并没有被"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "@Component"
								},
								{
									"Type": "NodeText",
									"Data": "​修饰"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230331091519-pmchyg4",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230331091519-pmchyg4",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "4. AutowiredAnnotationBeanPostProcessor 的解析流程"
				}
			]
		},
		{
			"ID": "20230331091519-vmb6il0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-vmb6il0",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "​"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AutowiredAnnotationBeanPostProcessor"
				},
				{
					"Type": "NodeText",
					"Data": "​ 完成"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "@Autowired. @Value、 @Inject"
				},
				{
					"Type": "NodeText",
					"Data": "​注解的功能， 完成了\nSpring的注入"
				}
			]
		},
		{
			"ID": "20230331091519-guylksq",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230331091519-guylksq",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-xk20fvv",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230331091519-xk20fvv",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-urfqv7k",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-urfqv7k",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "determineCandidateConstructors"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": " 方法"
								},
								{
									"Type": "NodeText",
									"Data": " ：筛选出当前bean中能作为构造注入的构造函数列表。用于构造注入"
								}
							]
						},
						{
							"ID": "20230331091519-z0tpur4",
							"Type": "NodeList",
							"ListData": {},
							"Properties": {
								"id": "20230331091519-z0tpur4",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"ID": "20230331091519-8stzws8",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-8stzws8",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-a2h2plc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-a2h2plc",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "处理了"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Lookup"
												},
												{
													"Type": "NodeText",
													"Data": "​注解,将"
												},
												{
													"Type": "NodeTextMark",
													"TextMarkType": "code",
													"TextMarkTextContent": "@Lookup"
												},
												{
													"Type": "NodeText",
													"Data": "​注解标注的方法保存了起来。这一步和构造函数的筛选没有任何关系"
												}
											]
										}
									]
								},
								{
									"ID": "20230331091519-xn36a6n",
									"Type": "NodeListItem",
									"ListData": {
										"BulletChar": 42,
										"Marker": "Kg=="
									},
									"Properties": {
										"id": "20230331091519-xn36a6n",
										"updated": "20230331091519"
									},
									"Children": [
										{
											"ID": "20230331091519-jj7qtxj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20230331091519-jj7qtxj",
												"updated": "20230331091519"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "挑选候选构造函数。简单逻辑就是有注解修饰选注解修饰的构造函数,没有的话使用默认无参构造函数没有无参构造函数,再没有返回null."
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-l7t7mmd",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230331091519-l7t7mmd",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-5wrrvdz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-5wrrvdz",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong code",
									"TextMarkTextContent": "postProcessProperties"
								},
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": " 方法"
								},
								{
									"Type": "NodeText",
									"Data": " ：筛选Bean中需要注入的属性,进行属性注入。用于设置注入和注解注入遍历每个属性,找到被注入注解修饰的属性。保存到"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "currElements"
								},
								{
									"Type": "NodeText",
									"Data": "​中。遍历每个方法,找到被注入注解修饰的方法, 保存到"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "currElements"
								},
								{
									"Type": "NodeText",
									"Data": "​中。随后遍历"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "currElements"
								},
								{
									"Type": "NodeText",
									"Data": "​, 通过"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "resolveDependency"
								},
								{
									"Type": "NodeText",
									"Data": "​方法将方法或者属性注入("
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "resolveDependency"
								},
								{
									"Type": "NodeText",
									"Data": "​方法是在"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "populateBean"
								},
								{
									"Type": "NodeText",
									"Data": "​方法中按照类型注入时调用的方法)这里可以知道,按照顺序遍历，方法的属性在属性的后面，自动注入时,方法的注入结果会把注解属性的注入覆盖掉。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230331091519-5xpd00w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-5xpd00w",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注： Spring注入的方式分为三种 ：构造注入、设值注入、注解注入。在"
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "AutowiredAnnotationBeanPostProcessor"
				},
				{
					"Type": "NodeText",
					"Data": "​ 中处理的实际是设置注入和注解注入。"
				}
			]
		},
		{
			"ID": "20230331091519-9zef2sb",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20230331091519-9zef2sb",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5. Bean 创建的过程"
				}
			]
		},
		{
			"ID": "20230331091519-i3s03qq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-i3s03qq",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "个人认为，在Spring容器中Bean的 创建时可以认为分为两个过程："
				}
			]
		},
		{
			"ID": "20230331091519-q0ka3w7",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1
			},
			"Properties": {
				"id": "20230331091519-q0ka3w7",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-6mhc9kh",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "MS4=",
						"Num": 1
					},
					"Properties": {
						"id": "20230331091519-6mhc9kh",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-12xt7dj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-12xt7dj",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bean对应的BeanDefinition 的创建。"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-t307pr1",
					"Type": "NodeListItem",
					"ListData": {
						"Typ": 1,
						"Delimiter": 46,
						"Marker": "Mi4=",
						"Num": 2
					},
					"Properties": {
						"id": "20230331091519-t307pr1",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-p1e0vq1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-p1e0vq1",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Bean 实例的创建。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20230331091519-7w3ypoh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20230331091519-7w3ypoh",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "那么提出下面的问题："
				}
			]
		},
		{
			"ID": "20230331091519-nuhly3x",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20230331091519-nuhly3x",
				"updated": "20230331091519"
			},
			"Children": [
				{
					"ID": "20230331091519-shvt0mw",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-shvt0mw",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-g9nqxvz",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-g9nqxvz",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "BeanDefinition 的作用是什么？为什么需要创建 BeanDefinition？"
								},
								{
									"Type": "NodeText",
									"Data": "\n因为在 Spring容器中，Bean的创建并非仅仅通过反射创建就结束了。在创建过程中，需要考虑到Bean针对Spring容器中的一些属性，如 Bean的作用域(单例、多例等)，是否需要懒加载、Bean是否使用别名等。所以BeanDefinition 中不仅仅包含了 Bean Class 文件信息，还包含了这些容器属性。当Bean 进行实例化创建时需要根据对应的BeanDefinition 提供对应的信息来完成创建过程。"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-ceu2guq",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-ceu2guq",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-rv5ytjg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-rv5ytjg",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "BeanDefinition 是在什么时候创建的？"
								},
								{
									"Type": "NodeText",
									"Data": "\nConfigurationClassPostProcessor 在解析出需要注入的Bean的同时会生成对应的 BeanDefinition，并保存到 "
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "DefaultListableBeanFactory#beanDefinitionMap"
								},
								{
									"Type": "NodeText",
									"Data": "​中"
								}
							]
						}
					]
				},
				{
					"ID": "20230331091519-20lefuk",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20230331091519-20lefuk",
						"updated": "20230331091519"
					},
					"Children": [
						{
							"ID": "20230331091519-8bt9mvf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20230331091519-8bt9mvf",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"TextMarkType": "strong",
									"TextMarkTextContent": "Bean 的实例在什么时候创建的?"
								},
								{
									"Type": "NodeText",
									"Data": "\n这里需要分为两种情况：BeanPostProcessor 和普通的Bean。BeanPostProcessor 因为参与在普通Bean的创建过程，所以其创建时机在普通Bean之前。不过都在AbstractApplicationContext#refresh 中创建，详细实现我们在"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "a",
									"TextMarkAHref": "https://blog.csdn.net/qq_36882793/article/details/106441853",
									"TextMarkTextContent": "Spring源码分析一：容器的刷新 - refresh()"
								},
								{
									"Type": "NodeText",
									"Data": " 中讲过。其大概逻辑如下："
								}
							]
						},
						{
							"ID": "20230331091519-ah1qcl0",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20230331091519-ah1qcl0",
								"updated": "20230331091519"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public void refresh() throws BeansException, IllegalStateException { \n\t...\n\t// 激活 BeanFactoryPostProcessors\n\tinvokeBeanFactoryPostProcessors(beanFactory);\n\t...\n\t// 创建 BeanPostProcessor 实例并注册到 BeanFactory.beanPostProcessors 集合中\n\tregisterBeanPostProcessors(beanFactory);\n\t...\n\t// 完成非惰性普通bean的创建工作\n\tfinishBeanFactoryInitialization(beanFactory);\n\t...\n}\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				}
			]
		}
	]
}